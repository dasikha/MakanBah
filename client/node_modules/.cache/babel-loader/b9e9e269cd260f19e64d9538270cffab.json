{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/khalilah/MakanBah/client/src/App.js\";\nimport './App.css';\nimport React from \"react\";\nconst API = \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=5.9788,116.0753&radius=1500&type=restaurant&keyword=breakfast&key=AIzaSyAsM-TE6HjRKxM8Tph0HmDmwyaWgRYSuaM\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      restaurants: []\n    };\n    this.map = {};\n    this.service = null;\n    this.infowindow = null;\n    this.pos = {};\n  } // function initMap() {\n  //     // Set the default location and initialize all variables\n  //     pos = {lat: 5.9788, lng: 116.0753};\n  //     map = new google.maps.Map(document.getElementById('map'), {\n  //         center: pos,\n  //         zoom: 15\n  //     });\n  // }\n\n\n  initMap() {\n    this.pos = {\n      lat: 5.9788,\n      lng: 116.0753\n    };\n    this.map = new google.maps.Map(document.getElementById('map'), {\n      center: this.pos,\n      zoom: 15\n    });\n  }\n\n  componentDidMount() {\n    this.initMap(); // this.pos = {lat: 5.9788, lng: 116.0753};\n\n    const kotakinabalu = new google.maps.LatLng(this.pos.lat, this.pos.lng);\n    this.infowindow = new google.maps.InfoWindow();\n    this.map = new google.maps.Map(document.getElementById(\"map\"), {\n      center: this.pos,\n      zoom: 15\n    });\n    let request = {\n      location: this.pos,\n      rankBy: google.maps.places.RankBy.DISTANCE,\n      keyword: 'restaurant'\n    };\n    /* const request = {\n      fields: [\"type\", \"restaurant\"]\n    }; */\n\n    this.service = new google.maps.places.PlacesService(this.map);\n    this.service.nearbySearch(request, (results, status) => {\n      if (status == google.maps.places.PlacesServiceStatus.OK) {\n        this.setState({\n          restaurants: results\n        });\n\n        for (let i = 0; i < results.length; i++) {\n          console.log(results[i].name); //createMarker(results[i]);\n        }\n      }\n    }); // fetch(API)\n    // .then(response => {\n    //     console.log(response);\n    //     response.json()\n    // })\n    // .then(data => {\n    //     console.log(data);\n    //     this.setState({restaurants:data});\n    // })\n    // .catch(error => {\n    //     console.log(\"Error\", error);\n    // });\n    // fetch(\"/restaurants\")\n    // .then(data => {\n    //   this.setState({restaurants:data});\n    // })\n    // .catch(error => {\n    //   console.log(\"Error\", error);\n    // });\n  }\n\n  render() {\n    const {\n      restaurants\n    } = this.state;\n    console.log(\"i am here\", restaurants);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"script\", {\n        async: true,\n        defer: true,\n        src: \"https://maps.googleapis.com/maps/api/js?key=AIzaSyAsM-TE6HjRKxM8Tph0HmDmwyaWgRYSuaM&callback=componentDidMount&libraries=places&v=weekly\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Makanbah\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: restaurants.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"map\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: restaurants.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Restaurant Name: \", item.name]\n        }, item.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; // Solution with Shubhra\n// Put in HTML\n// <div id=\"map\"></div>\n// <script src=\"https://polyfill.io/v3/polyfill.min.js?features=default\"></script>\n// Techsprint Academy to Everyone (6:31 PM)\n// <script\n//       src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBIwzALxUPNbatRBj3Xi1Uhp0fFzwWNBkE&callback=initMap&libraries=places&v=weekly\"\n//       defer\n//     ></script>\n// Fiddle link : https://jsfiddle.net/api/post/library/pure/#&togetherjs=6JE5PLPLin","map":{"version":3,"sources":["/Users/khalilah/MakanBah/client/src/App.js"],"names":["React","API","App","Component","constructor","props","state","restaurants","map","service","infowindow","pos","initMap","lat","lng","google","maps","Map","document","getElementById","center","zoom","componentDidMount","kotakinabalu","LatLng","InfoWindow","request","location","rankBy","places","RankBy","DISTANCE","keyword","PlacesService","nearbySearch","results","status","PlacesServiceStatus","OK","setState","i","length","console","log","name","render","item"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from \"react\";\n\nconst API = \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=5.9788,116.0753&radius=1500&type=restaurant&keyword=breakfast&key=AIzaSyAsM-TE6HjRKxM8Tph0HmDmwyaWgRYSuaM\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      restaurants: [],\n    };\n    this.map = {};\n    this.service = null;\n    this.infowindow = null;\n    this.pos = {};\n    \n  }\n\n    // function initMap() {\n    //     // Set the default location and initialize all variables\n    //     pos = {lat: 5.9788, lng: 116.0753};\n    //     map = new google.maps.Map(document.getElementById('map'), {\n    //         center: pos,\n    //         zoom: 15\n    //     });\n    // }\n\n  initMap() {\n    this.pos = {lat: 5.9788, lng: 116.0753};\n        this.map = new google.maps.Map(document.getElementById('map'), {\n            center: this.pos,\n            zoom: 15\n        });\n  }\n  componentDidMount(){\n  \n    this.initMap();\n\n    // this.pos = {lat: 5.9788, lng: 116.0753};\n      const kotakinabalu = new google.maps.LatLng(this.pos.lat, this.pos.lng);\n      this.infowindow = new google.maps.InfoWindow();\n      this.map = new google.maps.Map(document.getElementById(\"map\"), {\n        center: this.pos,\n        zoom: 15,\n      }); \n      \n      let request = {\n        location: this.pos,\n        rankBy: google.maps.places.RankBy.DISTANCE,\n        keyword: 'restaurant'\n        };\n        \n      /* const request = {\n        fields: [\"type\", \"restaurant\"]\n      }; */\n      this.service = new google.maps.places.PlacesService(this.map);\n      this.service.nearbySearch(request, (results, status) => {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n        this.setState({restaurants:results});\n        for (let i = 0; i < results.length; i++) {\n          console.log(results[i].name);\n          //createMarker(results[i]);\n          }\n        }\n    });\n\n\n\n    // fetch(API)\n    // .then(response => {\n    //     console.log(response);\n    //     response.json()\n    // })\n    // .then(data => {\n    //     console.log(data);\n    //     this.setState({restaurants:data});\n    // })\n    // .catch(error => {\n    //     console.log(\"Error\", error);\n    // });\n    // fetch(\"/restaurants\")\n    // .then(data => {\n    //   this.setState({restaurants:data});\n    // })\n    // .catch(error => {\n    //   console.log(\"Error\", error);\n    // });\n  }\n\n\n  render() { \n\n    const {restaurants} = this.state;\n    console.log(\"i am here\", restaurants);\n\n    return ( \n      <div className=\"App\">\n        <script async defer src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyAsM-TE6HjRKxM8Tph0HmDmwyaWgRYSuaM&callback=componentDidMount&libraries=places&v=weekly\"></script>\n\n      <h1>Makanbah</h1>\n      <h2>{restaurants.length}</h2>\n      <div id=\"map\"></div>\n    \n      <ul>\n        {restaurants.map(item=>\n          <li key={item.name}>\n            Restaurant Name: {item.name}\n          </li>\n        )}\n      </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n// Solution with Shubhra\n\n\n// Put in HTML\n// <div id=\"map\"></div>\n// <script src=\"https://polyfill.io/v3/polyfill.min.js?features=default\"></script>\n// Techsprint Academy to Everyone (6:31 PM)\n// <script\n//       src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBIwzALxUPNbatRBj3Xi1Uhp0fFzwWNBkE&callback=initMap&libraries=places&v=weekly\"\n//       defer\n//     ></script>\n\n\n// Fiddle link : https://jsfiddle.net/api/post/library/pure/#&togetherjs=6JE5PLPLin"]},"metadata":{},"sourceType":"module"}