{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/khalilah/MakanBah/client/src/App.js\";\nimport './App.css';\nimport React from \"react\";\nconst API = \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=5.9788,116.0753&radius=1500&type=restaurant&keyword=breakfast&key=AIzaSyAsM-TE6HjRKxM8Tph0HmDmwyaWgRYSuaM\";\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      restaurants: []\n    };\n  }\n\n  componentDidMount() {\n    let map;\n    let service;\n    let infowindow;\n    let pos;\n\n    function initMap() {\n      pos = {\n        lat: 5.9788,\n        lng: 116.0753\n      };\n      const kotakinabalu = new google.maps.LatLng(pos.lat, pos.lng);\n      infowindow = new google.maps.InfoWindow();\n      map = new google.maps.Map(document.getElementById(\"map\"), {\n        center: pos,\n        zoom: 15\n      });\n      let request = {\n        location: pos,\n        rankBy: google.maps.places.RankBy.DISTANCE,\n        keyword: 'restaurant'\n      };\n      /* const request = {\n        fields: [\"type\", \"restaurant\"]\n      }; */\n\n      service = new google.maps.places.PlacesService(map);\n      service.nearbySearch(request, (results, status) => {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n          for (let i = 0; i < results.length; i++) {\n            console.log(results[i].name); //createMarker(results[i]);\n          }\n        }\n      });\n    }\n\n    fetch(API).then(response => {\n      console.log(response);\n      response.json();\n    }).then(data => {\n      console.log(data);\n      this.setState({\n        restaurants: data\n      });\n    }).catch(error => {\n      console.log(\"Error\", error);\n    }); // fetch(\"/restaurants\")\n    // .then(data => {\n    //   this.setState({restaurants:data});\n    // })\n    // .catch(error => {\n    //   console.log(\"Error\", error);\n    // });\n  }\n\n  render() {\n    const {\n      restaurants\n    } = this.state;\n    console.log(\"i am here\", restaurants);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Makanbah\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: restaurants.length\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: restaurants.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Restaurant Name: \", item.name]\n        }, item.name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App; // Solution with Shubhra\n// Put in HTML\n// <div id=\"map\"></div>\n// <script src=\"https://polyfill.io/v3/polyfill.min.js?features=default\"></script>\n// Techsprint Academy to Everyone (6:31 PM)\n// <script\n//       src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBIwzALxUPNbatRBj3Xi1Uhp0fFzwWNBkE&callback=initMap&libraries=places&v=weekly\"\n//       defer\n//     ></script>\n// Fiddle link : https://jsfiddle.net/api/post/library/pure/#&togetherjs=6JE5PLPLin","map":{"version":3,"sources":["/Users/khalilah/MakanBah/client/src/App.js"],"names":["React","API","App","Component","constructor","props","state","restaurants","componentDidMount","map","service","infowindow","pos","initMap","lat","lng","kotakinabalu","google","maps","LatLng","InfoWindow","Map","document","getElementById","center","zoom","request","location","rankBy","places","RankBy","DISTANCE","keyword","PlacesService","nearbySearch","results","status","PlacesServiceStatus","OK","i","length","console","log","name","fetch","then","response","json","data","setState","catch","error","render","item"],"mappings":"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","sourcesContent":["import './App.css';\nimport React from \"react\";\n\nconst API = \"https://maps.googleapis.com/maps/api/place/nearbysearch/json?location=5.9788,116.0753&radius=1500&type=restaurant&keyword=breakfast&key=AIzaSyAsM-TE6HjRKxM8Tph0HmDmwyaWgRYSuaM\"\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { \n      restaurants: [],\n    };\n  }\n\n\n  \n\n\n  componentDidMount(){\n    let map;\n  let service;\n  let infowindow;\n  let pos;\n\n  function initMap() {\n    pos = {lat: 5.9788, lng: 116.0753};\n      const kotakinabalu = new google.maps.LatLng(pos.lat, pos.lng);\n      infowindow = new google.maps.InfoWindow();\n      map = new google.maps.Map(document.getElementById(\"map\"), {\n        center: pos,\n        zoom: 15,\n      }); \n      \n      let request = {\n        location: pos,\n        rankBy: google.maps.places.RankBy.DISTANCE,\n        keyword: 'restaurant'\n        };\n        \n      /* const request = {\n        fields: [\"type\", \"restaurant\"]\n      }; */\n      service = new google.maps.places.PlacesService(map);\n      service.nearbySearch(request, (results, status) => {\n        if (status == google.maps.places.PlacesServiceStatus.OK) {\n        \n        for (let i = 0; i < results.length; i++) {\n          console.log(results[i].name);\n          //createMarker(results[i]);\n          }\n        }\n    });\n    }\n\n    \n    fetch(API)\n    .then(response => {\n        console.log(response);\n        response.json()\n    })\n    .then(data => {\n        console.log(data);\n        this.setState({restaurants:data});\n    })\n    .catch(error => {\n        console.log(\"Error\", error);\n    });\n    // fetch(\"/restaurants\")\n    // .then(data => {\n    //   this.setState({restaurants:data});\n    // })\n    // .catch(error => {\n    //   console.log(\"Error\", error);\n    // });\n  }\n\n\n  render() { \n    const {restaurants} = this.state;\n    console.log(\"i am here\", restaurants);\n\n    return ( \n      <div className=\"App\">\n      <h1>Makanbah</h1>\n      <h2>{restaurants.length}</h2>\n    \n      <ul>\n        {restaurants.map(item=>\n          <li key={item.name}>\n            Restaurant Name: {item.name}\n          </li>\n        )}\n      </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n\n\n\n\n\n\n\n// Solution with Shubhra\n\n\n// Put in HTML\n// <div id=\"map\"></div>\n// <script src=\"https://polyfill.io/v3/polyfill.min.js?features=default\"></script>\n// Techsprint Academy to Everyone (6:31 PM)\n// <script\n//       src=\"https://maps.googleapis.com/maps/api/js?key=AIzaSyBIwzALxUPNbatRBj3Xi1Uhp0fFzwWNBkE&callback=initMap&libraries=places&v=weekly\"\n//       defer\n//     ></script>\n\n\n// Fiddle link : https://jsfiddle.net/api/post/library/pure/#&togetherjs=6JE5PLPLin"]},"metadata":{},"sourceType":"module"}